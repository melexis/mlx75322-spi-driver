#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# SWCC Project documentation build configuration file, created by
# sphinx-quickstart on Fri Aug  1 16:00:01 2014.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys, os, errno, subprocess, re
import sphinx_rtd_theme
import mlx.traceability
import mlx.coverity
from decouple import config

# Product variable, for keeping the specific product to build doc for (input from makefile through environemt var)
product = os.environ['PRODUCT']

if not product:
    print "PRODUCT environment variable not found!"
    sys.exit(os.strerror(errno.EPERM))

sys.path.insert(0, os.path.realpath(os.path.abspath('generated')))
cfg = __import__('sphinx_settings_' + product)

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
sys.path.insert(0, os.path.abspath('./process/config'))

# Import traceability plugin configuration, and assign to plugin config variables
from traceability_config import swcc_traceability_attributes
from traceability_config import swcc_traceability_attribute_to_string
from traceability_config import swcc_traceability_relationships
from traceability_config import swcc_traceability_relationship_to_string
from traceability_config import swcc_traceability_external_relationship_to_url
from traceability_config import swcc_traceability_render_relationship_per_item
traceability_attributes = swcc_traceability_attributes
traceability_attribute_to_string = swcc_traceability_attribute_to_string
traceability_relationships = swcc_traceability_relationships
traceability_relationship_to_string = swcc_traceability_relationship_to_string
traceability_external_relationship_to_url = swcc_traceability_external_relationship_to_url
traceability_render_relationship_per_item = swcc_traceability_render_relationship_per_item

# -- General configuration -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = ['sphinx.ext.autodoc', 'sphinx.ext.doctest',
'mlx.coverity',
'sphinx.ext.intersphinx', 'sphinx.ext.todo', 'sphinx.ext.coverage',
'sphinx.ext.mathjax', 'sphinx.ext.ifconfig',
'sphinx.ext.viewcode', 'sphinx.ext.graphviz', 'sphinxcontrib.plantuml',
'sphinxcontrib.blockdiag', 'sphinxcontrib.packetdiag',
'sphinxcontrib.doxylink',
'mlx.traceability',
'sphinx_selective_exclude.eager_only',
'sphinx_selective_exclude.modindex_exclude',
'sphinx_selective_exclude.search_auto_exclude',
'breathe'
]

skinparam_dir = os.path.dirname(os.path.realpath(__file__)) + '/_static/melexis.skinparam'

try:
    plantuml = os.environ['PLANTUML']
except KeyError: # There is no such environment variable. Try to find it in the path
    # Point to plantuml jar file
    # confirm we have plantuml in the path
    if 'nt' in os.name:
        plantuml_path = subprocess.check_output(["where", "/F", "plantuml.jar"])
        if not plantuml_path :
            print "Can't find 'plantuml.jar' file."
            print "You need to add path to 'plantuml.jar' file to your PATH variable."
            sys.exit(os.strerror(errno.EPERM))
        plantuml = plantuml_path.decode("utf-8")
        plantuml = plantuml.rstrip('\n\r')
        plantuml = plantuml.replace('"', '')
        plantuml = plantuml.replace('\\', '//')
        plantuml = 'java -jar' + ' ' + plantuml
    else:
        plantuml_path = subprocess.check_output(["whereis", "-u", "plantuml"])
        if not plantuml_path :
            print "Can't find 'plantuml.jar' file."
            print "You need to add path to 'plantuml.jar' file to your PATH variable."
            sys.exit(os.strerror(errno.EPERM))
        plantuml = 'plantuml'

plantuml = plantuml + ' -I' + skinparam_dir

# Doxylink
doxylink = {
   'doxy-link' : (os.path.join('../build/doc', product, 'html/doxygen/project.tag'), './doxygen/html/'),
}

breathe_projects = { "silicon": os.path.join('../../build/doc', product, 'html/doxygen/xml/')}
breathe_default_project = "silicon"

todo_include_todos = True

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = os.environ.get('MASTER','index')

# General information about the project.
project = 'Melexis Project Documentation'
copyright = '2019, Melexis, SWCC'
asil_level = 'QM'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = os.environ.get('VERSION','0.1')
# The full version, including alpha/beta/rc tags.
release = version

rst_prolog = """
.. |project_name| replace:: MLX12345
.. |friendly_project_name| replace:: sensor chip
.. |internal_project_name| replace:: 12345
.. |asil_level| replace:: %s
.. |disclaimer| replace:: *The contents of this document are CONFIDENTIAL AND PROPRIETARY to Melexis. All Rights Reserved*
""" % (asil_level)

rst_epilog = """
.. |swcc| replace:: SoftWare Competence Center
"""

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False


# Traceability callback to act on items
#
# - add default ASIL level to requirements
def traceability_adapt_item(name, collection):
    # When item is a requirement and asil level is not defined, mark it as default ASIL
    RE_RQT = re.compile('^SWRQT.*')
    if RE_RQT.search(name):
        item = collection.get_item(name)
        item.add_attribute('asil', asil_level)

# Install callback in traceability plugin
traceability_callback_per_item = traceability_adapt_item

# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#html_theme = 'classic'
#html_theme = 'sphinxdoc'
#html_theme = 'agogo'
#html_theme = 'nature'
#html_theme = 'haiku'
html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = 'process/images/mlx_small.png'

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static', os.path.join(os.path.dirname(mlx.traceability.__file__), 'assets')]

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'sw-project'


# -- Options for LaTeX output --------------------------------------------------

latex_engine = 'pdflatex'

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
'papersize': 'a4paper',

# The font size ('10pt', '11pt' or '12pt').
'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
'preamble':
r'\setcounter{tocdepth}{3}'
r'\usepackage{pdflscape}',

'figure_align': 'H',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
  (master_doc, '{filename}.tex'.format(filename=master_doc), 'SW Project Documentation',
   'SWCC', 'manual', 'True'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
latex_logo = 'process/images/mlx-white.png'

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
latex_show_pagerefs = True

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
latex_domain_indices = True


# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'sw-project', 'SW Project Documentation',
     ['SWCC'], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output ------------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  ('index', 'sw-project', 'SW Project Documentation',
   'Melexis', 'sw-project', 'One line description of project.',
   'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False


# -- Options for Epub output ---------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = 'SW Project Documentation'
epub_author = 'SWCC'
epub_publisher = 'SWCC'
epub_copyright = '2019, SWCC'

# The language of the text. It defaults to the language option
# or en if the language is not set.
#epub_language = ''

# The scheme of the identifier. Typical schemes are ISBN or URL.
#epub_scheme = ''

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#epub_identifier = ''

# A unique identification for the text.
#epub_uid = ''

# A tuple containing the cover image and cover page html template filenames.
#epub_cover = ()

# A sequence of (type, uri, title) tuples for the guide element of content.opf.
#epub_guide = ()

# HTML files that should be inserted before the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#epub_pre_files = []

# HTML files shat should be inserted after the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#epub_post_files = []

# A list of files that should not be packed into the epub file.
#epub_exclude_files = []

# The depth of the table of contents in toc.ncx.
#epub_tocdepth = 3

# Allow duplicate toc entries.
#epub_tocdup = True

# Fix unsupported image types using the PIL.
#epub_fix_images = False

# Scale large images.
#epub_max_image_width = 0

# If 'no', URL addresses will not be shown.
#epub_show_urls = 'inline'

# If false, no index is generated.
#epub_use_index = True


# Automatic put a parentheses to function links - True/False.
add_function_parentheses = True

## ---- TODO's ----
todo_include_todos = True

# Example configuration for intersphinx: refer to the Python standard library.
# intersphinx_mapping = {'icprocess': ('http://swcc-sofia.sofia.elex.be/~amcc/ic-process/', None),
#                        'anaprocess': ('http://swcc-sofia.sofia.elex.be/~amcc/ana-process/', None)}

# -- Options for coverity extension ----------------------------------------

coverity_credentials = {
    'transport': 'http',
    'port': '8080',
    'hostname': 'coverity.melexis.com',
    'username': config('COVERITY_USERNAME'),
    'password': config('COVERITY_PASSWORD'),
    'stream': config('COVERITY_STREAM'),
}

def setup(app):
    app.add_stylesheet('css/extra.css')
    cfg.add_project_tags(tags)
